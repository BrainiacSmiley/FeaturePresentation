<h1><%= @feature_description.name %></h1>

<% unless @feature_description.description.nil? %>
<h3>Erkl√§rung</h3>
<% if @feature_description.description.length > 120 %>
  <div class="textbox">
    <div class="description round">
      <%= @feature_description.description[0..120] %>
      <div class="box">
         <%= @feature_description.description[120..@feature_description.description.length] %>
      </div>
      <div class="clickable">...&gt;&gt;</div>
    </div>
  </div>
<% else %>
  <div class="description round">
    <%= @feature_description.description %>
  </div>
<% end %>
<p>&nbsp;</p>
<% end %>

<% if signed_in? %>
  <div class="administration">
    <button class="btn"><%= link_to t(:link_feature_new), new_feature_path %></button>
  </div>
<% end %>

<ul class="tabs" data-tabs="tabs">
  <%= render 'features/feature_tabs', :tabs => @features %>
</ul>

<div id="my-tab-content" class="tab-content">
  <%= render 'features/feature_tabs_contents', :contents => @features  %>
</div>

<%= javascript_include_tag 'bootstrap/bootstrap-tabs' %>
<%= javascript_include_tag 'jquery.touchwipe.1.1.1' %>
<script>
  var $allTabs
  var $activeTab
  var $allNavTabs
  var activeTabIndex

  Number.prototype.mod = function(n) {
    return ((this%n)+n)%n;
  }

  //function for switching
  function featureBrowsing(changing) {
    //new Index
    var newTabIndex = (changing+activeTabIndex).mod($allTabs.length)

    //remove old active state
    removeActive(activeTabIndex)
    //add new active state
    addActive(newTabIndex)
    //filling url hash
    setURLHash(newTabIndex)
    getValues()
  }

  function restoreTabFromHash() {
    var actualHash = window.location.hash
    if (actualHash != "") {
      var hashIndex = parseInt(actualHash.substr(1))
      if (activeTabIndex != hashIndex) {
        removeActive(activeTabIndex)
        addActive(hashIndex)
      }
    }
  }

  function removeActive(index) {
    $($allTabs[index]).removeClass('active')
    $($allNavTabs[index]).removeClass('active')
  }

  function addActive(index) {
    $($allTabs[index]).addClass('active')
    $($allNavTabs[index]).addClass('active')
  }

  function setURLHash(index) {
    window.location.hash = index
  }

  //calculation of actual values
  function getValues() {
    $allTabs = $('.tab-pane')
    $activeTab = $('.active.tab-pane')
    $allNavTabs = $('ul.tabs li')
    //actual Index
    activeTabIndex = $allTabs.index($activeTab);
  }

  $(document).ready(function() {
    $(function () {
      $('.tabs').tabs()
      $('.tabs').bind('change', function (e) {
        getValues()
        setURLHash(activeTabIndex)
      })
    })

    getValues()
    restoreTabFromHash()

    //toggle possibility for feature_description.description
    $(".clickable").click(function() {
      $(this).siblings(".box").slideToggle('slow');
      if($(this).html()=="...&gt;&gt;") {
        $(this).html("&lt;&lt;");
      } else {
        $(this).html("...&gt;&gt;");
      }
    });
    $(".clickable").siblings(".box").hide()

    //adding the gestures
    $('body').touchwipe({
      wipeLeft: function(){ featureBrowsing(-1) },
      wipeRight: function(){ featureBrowsing(1) }
    })
  });
</script>
